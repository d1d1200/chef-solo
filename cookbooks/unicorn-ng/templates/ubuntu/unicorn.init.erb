#!/bin/sh

### BEGIN INIT INFO
# Provides:          <%= @service_name %>
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the unicorn web server
# Description:       starts unicorn using start-stop-daemon
### END INIT INFO

export BUNDLE_GEMFILE="<%= @bundle_gemfile %>"

APP_ROOT="<%= @app_root %>"

SHELL=/bin/bash
DAEMON="<%= @bundle %>"
DAEMON_OPTS="exec unicorn -D -E <%= @environment %> -c <%= @config %>"

<% if @wrapper %>
WRAPPER="<%= @wrapper %>"
WRAPPER_OPTS="<%= @wrapper_opts %>"
COMMAND="$WRAPPER -- $SET_PATH; $WRAPPER_OPTS $DAEMON $DAEMON_OPTS"
<% else %>
COMMAND="$DAEMON -- $DAEMON_OPTS"
<% end -%>

<% if @set_env %>
<%= @set_env %>
<% end -%>

<% if @x_spree_client_token %>
export X_SPREE_CLIENT_TOKEN="<%= @x_spree_client_token %>"
<% end -%>
<% if @x_spree_client_token2 %>
export X_SPREE_CLIENT_TOKEN2="<%= @x_spree_client_token2 %>"
<% end -%>
<% if @s3_bucket %>
export S3_BUCKET="<%= @s3_bucket %>"
<% end -%>
<% if @cloudfront_url %>
export CLOUDFRONT_URL="<%= @cloudfront_url %>"
<% end -%>
<% if @aws_access_key_id %>
export AWS_ACCESS_KEY_ID="<%= @aws_access_key_id %>"
<% end -%>
<% if @aws_secret_access_key %>
export AWS_SECRET_ACCESS_KEY="<%= @aws_secret_access_key %>"
<% end -%>
<% if @devise_secret_key %>
export DEVISE_SECRET_KEY="<%= @devise_secret_key %>"
<% end -%>
<% if @paperclip_hash_secret %>
export PAPERCLIP_HASH_SECRET="<%= @paperclip_hash_secret %>"
<% end -%>
<% if @asiapay_secure_hash_secret %>
export ASIAPAY_SECURE_HASH_SECRET="<%= @asiapay_secure_hash_secret %>"
<% end -%>
<% if @redis_password %>
export REDIS_PASSWORD="<%= @redis_password %>"
<% end -%>
<% if @adyen_notify_user %>
export ADYEN_NOTIFY_USER="<%= @adyen_notify_user %>"
<% end -%>
<% if @adyen_notify_passwd %>
export ADYEN_NOTIFY_PASSWD="<%= @adyen_notify_passwd %>"
<% end -%>
<% if @elasticsearch_url %>
export ELASTICSEARCH_URL="<%= @elasticsearch_url %>"
<% end -%>
<% if @dropbox_token %>
export DROPBOX_TOKEN="<%= @dropbox_token %>"
<% end -%>
<% if @dropbox_secret %>
export DROPBOX_SECRET="<%= @dropbox_secret %>"
<% end -%>
<% if @dropbox_app_key %>
export DROPBOX_APP_KEY="<%= @dropbox_app_key %>"
<% end -%>
<% if @dropbox_app_secret %>
export DROPBOX_APP_SECRET="<%= @dropbox_app_secret %>"
<% end -%>
<% if @logentries_token %>
export LOGENTRIES_TOKEN="<%= @logentries_token %>"
<% end -%>
<% if @smtp_password %>
export SMTP_PASSWORD="<%= @smtp_password %>"
<% end -%>
<% if @smtp_username %>
export SMTP_USERNAME="<%= @smtp_username %>"
<% end -%>
<% if @smtp_address %>
export SMTP_ADDRESS="<%= @smtp_address %>"
<% end -%>
<% if @smtp_domain %>
export SMTP_DOMAIN="<%= @smtp_domain %>"
<% end -%>
<% if @mixpanel_token %>
export MIXPANEL_TOKEN="<%= @mixpanel_token %>"
<% end -%>
<% if @parse_application_id %>
export PARSE_APPLICATION_ID="<%= @parse_application_id %>"
<% end -%>
<% if @parse_rest_api_key %>
export PARSE_REST_API_KEY="<%= @parse_rest_api_key %>"
<% end -%>
<% if @secret_key_base %>
export SECRET_KEY_BASE="<%= @secret_key_base %>"
<% end -%>
<% if @memcached_url %>
export MEMCACHED_URL="<%= @memcached_url %>"
<% end -%>
<% if @memcached_username %>
export MEMCACHED_USERNAME="<%= @memcached_username %>"
<% end -%>
<% if @memcached_password %>
export MEMCACHED_PASSWORD="<%= @memcached_password %>"
<% end -%>
<% if @dev_db_name %>
export DEV_DB_NAME="<%= @dev_db_name %>"
<% end -%>
<% if @dev_db_username %>
export DEV_DB_USERNAME="<%= @dev_db_username %>"
<% end -%>
<% if @rds_db_name %>
export RDS_DB_NAME="<%= @rds_db_name %>"
<% end -%>
<% if @rds_username %>
export RDS_USERNAME="<%= @rds_username %>"
<% end -%>
<% if @rds_password %>
export RDS_PASSWORD="<%= @rds_password %>"
<% end -%>
<% if @rds_hostname %>
export RDS_HOSTNAME="<%= @rds_hostname %>"
<% end -%>
<% if @rds_port %>
export RDS_PORT="<%= @rds_port %>"
<% end -%>

PIDFILE="<%= @pidfile %>"
USER="<%= @user %>"
LANG="<%= @locale %>"
LC_ALL="<%= @locale %>"
LANGUAGE="<%= @locale %>"

NAME=<%= @service_name %>
DESC=<%= @service_name %>

###
TIMEOUT=${timeout-60}
OLD_PIN="$PIDFILE.oldbin"
sig () {
  test -s "$PIDFILE" && kill -s $1 `cat $PIDFILE`
}
###

. /lib/lsb/init-functions

check_daemon() {
  if [ ! -x ${COMMAND%% *} ]; then
    log_action_msg "${COMMAND%% *} not found" || true
    log_end_msg 1 || false
    exit 1
  fi
}

case "$1" in
  start)
    log_daemon_msg "Starting $NAME" || true
    check_daemon

    if [ -s $PIDFILE ] && kill -0 $(cat $PIDFILE) > /dev/null 2>&1; then
      log_action_msg "apparently already running" || true
      log_end_msg 0 || true
      exit 0
    fi

    if start-stop-daemon --start --quiet --pidfile $PIDFILE --chuid $USER -d $APP_ROOT --exec $COMMAND; then
      log_end_msg 0 || true
    else
      log_end_msg 1 || false
    fi
    ;;

  stop)
    log_daemon_msg "Stopping $NAME" || true

    if start-stop-daemon --stop --quiet --pidfile $PIDFILE --chuid $USER; then
      log_end_msg 0 || true
    else
      log_end_msg 1 || false
    fi
    ;;

  restart)
    if [ -s $PIDFILE ] && kill -0 $(cat $PIDFILE) > /dev/null 2>&1; then
      log_daemon_msg "Restarting $NAME" || true

      # send SIGUSR2 to duplicate unicorn
      # before_fork will take care of qutting the old one
      if start-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --chuid $USER; then
        log_end_msg 0 || true
      else
        log_end_msg 1 || false
      fi

    else
      $0 start
    fi
    ;;

  upgrade)
    if sig USR2 && sleep 5
    then
      n=$TIMEOUT
      while test -s $OLD_PIN && test $n -ge 0
      do
        printf '.' && sleep 1 && n=$(( $n - 1 ))
      done
      echo

      if test $n -lt 0 && test -s $OLD_PIN
      then
        echo >&2 "$OLD_PIN still exists after $TIMEOUT seconds"
        exit 1
      fi
      exit 0
    fi
    echo >&2 "Couldn't upgrade, starting '$COMMAND' instead"
    $0 start
    ;;
  
  reopen-logs)
    sig USR1
    ;;

  full-restart)
    $0 stop
    sleep 3
    $0 start
    ;;

  reload)
    # send SIGHUP to gracefully restart all workers
    log_daemon_msg "Reloading $NAME" || true

    if start-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --chuid $USER; then
      log_end_msg 0 || true
    else
      log_end_msg 1 || false
    fi
    ;;

  add-worker)
    # send SIGTTIN to tell unicorn to spawn an additional worker
    log_daemon_msg "Adding one $NAME worker" || true

    if start-stop-daemon --stop --signal TTIN --quiet --pidfile $PIDFILE --chuid $USER; then
      log_end_msg 0 || true
    else
      log_end_msg 1 || false
    fi
    ;;

  remove-worker)
    # send SIGTTOU to tell unicorn to stop one worker
    log_daemon_msg "Removing one $NAME worker" || true

    if start-stop-daemon --stop --signal TTOU --quiet --pidfile $PIDFILE --chuid $USER; then
      log_end_msg 0 || true
    else
      log_end_msg 1 || false
    fi
    ;;

  status)
    if status_of_proc -p $PIDFILE "$DAEMON" unicorn; then
      WORKERS=$(ps ax |grep "unicorn worker" |grep -v grep |wc -l)
      log_action_msg "Current workers: $WORKERS"
      exit 0
    else
      exit 1
    fi
    ;;
  *)
    echo "Usage: $NAME {start|stop|restart|upgrade|full-restart|reload|status|add-worker|remove-worker}" >&2
    exit 1
    ;;
esac

exit 0
